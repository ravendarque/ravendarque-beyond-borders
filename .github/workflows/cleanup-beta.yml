name: Cleanup Beta Deployment

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semver version to remove (e.g., 0.1.0)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  cleanup-beta:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages-repo

      - name: Remove beta deployment
        run: |
          cd gh-pages-repo
          
          VERSION="${{ inputs.version }}"
          
          # Check if beta deployment exists
          if [ -d "beta/$VERSION" ]; then
            # Remove deployment directory
            rm -rf "beta/$VERSION"
            echo "Removed beta deployment for version: $VERSION"
            
            # Update beta index
            cd beta
            cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <title>Beta Deployments</title>
            <style>
              body { font-family: system-ui; max-width: 800px; margin: 40px auto; padding: 0 20px; }
              h1 { color: #333; }
              ul { list-style: none; padding: 0; }
              li { margin: 10px 0; padding: 15px; background: #f5f5f5; border-radius: 5px; }
              a { color: #0366d6; text-decoration: none; font-weight: 500; }
              a:hover { text-decoration: underline; }
              .version { font-family: 'Monaco', 'Courier New', monospace; }
              .empty { color: #666; font-style: italic; }
            </style>
          </head>
          <body>
            <h1>Beta Deployments</h1>
            <p>Active beta versions available for testing:</p>
            <ul>
          EOF
            
            # Check if any deployments remain
            has_deployments=false
            for dir in */; do
              if [ -d "$dir" ]; then
                version=${dir%/}
                echo "<li><a href='$version/' class='version'>v$version</a></li>" >> index.html
                has_deployments=true
              fi
            done
            
            if [ "$has_deployments" = false ]; then
              echo "<li class='empty'>No active beta deployments</li>" >> index.html
            fi
            
            cat >> index.html << 'EOF'
            </ul>
          </body>
          </html>
          EOF
            
            echo "DEPLOYMENT_REMOVED=true" >> $GITHUB_ENV
          else
            echo "No beta deployment found for version: $VERSION"
            echo "DEPLOYMENT_REMOVED=false" >> $GITHUB_ENV
          fi

      - name: Commit and push to gh-pages
        if: env.DEPLOYMENT_REMOVED == 'true'
        run: |
          cd gh-pages-repo
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Cleanup beta v${{ inputs.version }} ($(date -u +'%Y-%m-%d %H:%M:%S UTC'))" || echo "No changes to commit"
          git push

      - name: Cleanup summary
        run: |
          echo "### 🗑️ Beta Deployment Cleanup" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version:** \`v${{ inputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          if [ "$DEPLOYMENT_REMOVED" = "true" ]; then
            echo "**Status:** ✅ Deployment removed" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Status:** ℹ️ No deployment found to remove" >> $GITHUB_STEP_SUMMARY
          fi
