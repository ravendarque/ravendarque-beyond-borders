name: CI

on:
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  # Detect which files changed to determine if build/test is needed
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      production-code: ${{ steps.filter.outputs.production-code }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check file changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            production-code:
              - 'src/**'
              - 'public/**'
              - 'index.html'
              - 'vite.config.ts'
              - 'tsconfig.json'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'playwright.config.ts'
              - 'scripts/**'
              - '.github/scripts/**'

  # Lightweight validation - runs when production code changes
  validate:
    needs: check-changes
    if: needs.check-changes.outputs.production-code == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better secret scanning

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --only-verified

      - name: Security audit
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          exit-code: '1'

      - name: Get changed markdown files
        id: changed-md
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.md
            !node_modules/**
            !.local/**

      - name: Markdown lint
        if: steps.changed-md.outputs.any_changed == 'true'
        uses: DavidAnson/markdownlint-cli2-action@v16
        with:
          globs: ${{ steps.changed-md.outputs.all_changed_files }}

      - name: Get changed YAML files
        id: changed-yaml
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/**/*.yml
            .github/workflows/**/*.yaml

      - name: Install yamllint
        if: steps.changed-yaml.outputs.any_changed == 'true'
        run: pip install yamllint

      - name: YAML lint
        if: steps.changed-yaml.outputs.any_changed == 'true'
        run: |
          cat > /tmp/yamllint-config.yml << 'EOF'
          extends: default
          rules:
            line-length: disable
            comments: disable
            document-start: disable
            truthy: disable
          EOF

          echo "Linting changed YAML files:"
          for file in ${{ steps.changed-yaml.outputs.all_changed_files }}; do
            echo "Checking $file"
            yamllint -c /tmp/yamllint-config.yml "$file"
          done

      - name: Check for TODO/FIXME comments in production code
        run: |
          if grep -r "TODO\|FIXME" src/ public/ --exclude-dir=node_modules; then
            echo "⚠️ Warning: Found TODO/FIXME comments in production code"
            echo "Consider creating issues for these items"
          else
            echo "✅ No TODO/FIXME comments in production code"
          fi
        continue-on-error: true

      - name: Validate file permissions
        run: |
          # Check for executable files that shouldn't be
          if find src/ public/ -type f -executable -not -path "*/node_modules/*" | grep -v ".sh$"; then
            echo "❌ Found executable files in src/public that shouldn't be"
            exit 1
          fi
          echo "✅ File permissions OK"

      - name: Check for large files
        run: |
          # Find files larger than 1MB (except node_modules)
          large_files=$(find . -type f -size +1M -not -path "*/node_modules/*" -not -path "*/.git/*" -not -path "*/.local/*")
          if [ -n "$large_files" ]; then
            echo "⚠️ Warning: Large files found:"
            echo "$large_files"
            du -h $large_files
          else
            echo "✅ No large files found"
          fi
        continue-on-error: true

      - name: Validation summary
        if: always()
        run: |
          echo "✅ PR validation completed"
          echo "This job ensures required status checks don't block PRs"

  # Full build and test suite - runs after validation passes
  build-and-test:
    needs: [check-changes, validate]
    if: needs.check-changes.outputs.production-code == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Validate flag SVGs
        run: node scripts/validate-flags.cjs

      - name: Lint code
        run: pnpm run lint

      - name: Typecheck and build
        run: pnpm run build

      - name: Run unit tests
        run: pnpm test -- --run

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage
          if-no-files-found: ignore
